---
title: UVa, Laser Sculpture - 11683. My Solution to a Competitive Programming Problem
subtitle: Challenging my self to prove its correctness via formal logic
summary: Challenging my self to prove its correctness via formal logic

math: true
mmark: true

date: "2020-04-30T00:00:01Z"

featured: flase
draft: false

---

## Preface
In this blog post, We solve [UVa's Laser Sculpture - 11683](https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=2730) problem and prove our solution's correctness via formal logic. In case the proof is not flawed, Then the solution is guaranteed to yield the correct answer without any bug or error. For completeness, We also test our solution empirically on generated test-cases. Your feedback, inquiries and suggestions are highly welcomed.

## Proposed Solution, Intuitively
Before delving into mathematical rigour details, Let me give you an intuitive description of the solution and why it works.

Note that the laser only sculpts a layer of height equal to one while it is still on. If we wish to sculpts a layer of height 2, Then the laser must be toggled on and off twice. That suggests each layer intended to be sculpted counts on the laser to be turned on after being on off state. What if there are more than one sculpture on the same layer, but separated by couple of unsculpted units? then each sculpture on this layer counts.

Could we count the number of sculptures made by the laser through a linear scan of the input? Think of the following, where _b_ indicates a sculpted unit and _x_ indicates an unsculpted unit. A height equal to three is made here for a simple illustration.

| X_i  | X_i+1 |
| ---- |:-----:|
| b | b |
| x | b |
| x | x |

if _X_i_ here is _X_0_, then certainly the blank unit counts as a laser turned on. What about _X_1_, Would the two blank units count each on laser? Considering the fact that a laser could move horizontally while still being turned on allows two blanks crossing _X_0_ and _X_1_ to be sculpted on one count. What about the second blank of _X_1_? Clearly, The laser must sculp the blank above it first, So the second blank would be an additional count. Seemingly, We came across a condition here. if a blank in _X_i+1_ came after a blank in _X_i_, Then it should not count but if it came after an unsculpted unit, Then it counts.

The observation suggests the following. A column which tracks counts on each layer, and the state of the last scanned unit, i.e whether it is sculpted or not. Initially, It would be

| count  | unit |
| ---- |:-----:|
| 0 | x |
| 0 | x |
| 0 | x |

_x_ units initialized here are on behalf of the left most outer border. We proceed as follows, For a given _X_i_ determine units _b_ sculpted and units _x_ unsculpted. If a unit is _x_, Then leave count as it is. If a unit is _b_, Then check the unit before it, If it is _b_ leave count but if it is _x_ increment count by one. Afterward, Update unit column with the new unit. Do these steps on all vertical units. Repeat the procedure on each _X_i_. The correct result is the sum of all counts.

We could furtherly improve. Why do we need to track each layer on a separated _count_ for it? Instead, We could define only one variable which gets incremented whenever any layer detects a new laser sculpture. In addition, For the unit column, We do not need to check every unit and compare it with the previous one in order to find blank units preceeded by unsculpted x units. max(0, _X_i_ - _X_i+1_) would do the trick of finding blank units in _X_i+1_ preceeded by a x unit.

Therefore, The algorithm would elegantly look like this

```
input: height h, width w, set of X's, X_1, X_2, .., X_k
output: a the number of times a laser gets turned on to reach X's heights by sculpturing
Step 1: count = 0
Step 2: X_0 = 0
Step 3: loop on X's, count = count + max(0, X_i - X_i+1)
Step 4: return count
```

## Formal Logic
Here comes the formal-logic based proof of our algorithm's correctness. Kindly, note that it might still be flawed. However, If it is not, Then we guarantee the algorithm to yield the correct answer without any bugs or errors. Anyway, Before getting into the proof, We need to rigoursly model the problem of _Laser Sculpture - 11683_. Those rigor definitions and constraints are derived from our understanding of the problem.

### Definitions
For the following, We assume $h$, $w$ $\in \mathcal{N}$

**Board**: A 2d-array-alike corresponding to overall units. board is $b = (h \times w)$, units $u_{i,j}$ indexed (labeled) by a cartesian product of board's height and width. 

**Sculpture set on board**: A family of sets where each set is the set of units sculpted by the laser while it is still on. The sculpture set is $S = \begin{cases} S_1, S_2, .., S_k \end{cases}$ such that $\cup S \subseteq b$, $S_i \cap S_j = \phi$ for any distinct i and j, $S_i \neq \phi$ for any i. That says sculptures are subset of the original board units, no two sculptures are intersecting, and there's no empty sculpture. That conforms with our understanding that a unit cannot be shot twice by a laser, and a laser is not going to be turned on without sculpting some unit.

**Top-first**: That is a condition which ensures no sculpture occurs on some layer before the layer above it is sculptured. For any $S_q \in S$, $\forall u_{i,j} \in S_q( \begin{cases} u_{x,j} \in b | x < i \end{cases} \subseteq S_{q-1} \cup S_{q-2} \cup .. \cup S_{1} )$. Note that before $\subseteq$ the set is supposed to be closed. Seemingly, A bug does not allow it to be rendered.

**One-row**: That is a condition which ensures a continuous row of units are sculptured at once, not sculptured on multiple times in which the laser is turned on and off multiple times as well. For any two distinct $S_k$ and $S_q$, $\neg( \exists j_0  \exists j_1, u_{i_0,j_0} \in S_q \wedge u_{i_1,j_1} \in S_k \wedge j_1=j_0+1)$ for some $u_{i_0,j_0}$ and $u_{i_1,j_1}$.

**Uniqueness**: It is assumed that there is a unique number of times for the laser to be toggled on and off regardless of of the _sclupture set_. In other words, Even if there are two possible different scluptures which achieve the desired X's, The number of times the laser needs to be toggled on and off is the same.

**Problem Statement** (finally): Given height $h$, and width $w$ of the whole board $b$, and given heights $X_1$, $X_2$, .., $X_w$ of position $i$ in the board, There exists a _sculpture set_ $S$ _on board_ $b$ such that $b - S = \cup_{p \in \begin{cases}1, 2, .., w \end{cases}} \begin{cases} u_{i,p} \in b \end{cases}$ whereby each set $\begin{cases} u_{i,p_0} \in b \end{cases}$ has a cardinality of $X_{p_0}$. In other words, The set yielded from subtracting the board from sculpture set is composed of units conforming to desired $X$'s heights, for each column of the new board.

### Proof

**Lemma**: For $b-S$, where $b$ is a board of height $h$ and width $w \geq 2$ and $S$ is a _sclupture set on_ $b$ conforming to given heights of unsclupted units of last two board columns $X_{w-1}$ and $X_w$.

**(1)** if $X_{w} < i \leq X_{w-1}$, a unit $u_{i, w}$ is contained in some $S_k$ and no other unit is in $S_k$, that is, for some $S_k \in S$, $S_k = \begin{cases} u_{i, w} \end{cases}$.

**(2)** if $X_{w-1} < i$, a unit $u_{i, w}$ is contained in some $S_k$ which is per se an element of sclupture set on board $b$ of width $w-1$.